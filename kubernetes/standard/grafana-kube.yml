apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-server
  labels:
    app: grafana-server
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: grafana-server
  template:
    metadata:
      labels:
        app: grafana-server
    spec:
      containers:
      - image: agdgpn/grafana-image
        name: grafana-server
        ports:
          - containerPort: 3000
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "256Mi" 

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-server
  #namespace: dev
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana-server
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-server
  annotations:
    #traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: traefik
  tls:
    - secretName: prod-secret
      hosts:
        - grafana-prod.petclinic-datascientest.cloudns.ph
  rules:
  - host: grafana-prod.petclinic-datascientest.cloudns.ph
    http:
      paths: 
        - path: /
          pathType: Prefix
          backend:
            service:
              name: grafana-server
              port: 
                number: 3000