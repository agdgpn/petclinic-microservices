apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  labels:
    app: prometheus-server
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
  #namespace: dev 
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
      - image: agdgpn/prometheus-image:latest
        name: prometheus-server
        #command: ["cp /tmp/prometheus.yml /etc/prometheus/"]
        ports:
          - containerPort: 9090 

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-server
  #namespace: dev
spec:
  ports:
  - port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: prometheus-server
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-server
  annotations:
    #traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: traefik
  tls:
    - secretName: prod.prometheus-secret
      hosts:
        - prod.prometheus-petclinic.cloudns.ph
  rules:
  - host: prod.prometheus-petclinic.cloudns.ph
    http:
      paths: 
        - path: /
          pathType: Prefix
          backend:
            service:
              name: prometheus-server
              port: 
                number: 9090