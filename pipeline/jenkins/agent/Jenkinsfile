pipeline {
    agent {
        kubernetes {
            cloud 'dev-kube'
            yamlFile 'pipeline/jenkins/agent/pod.yaml'
            serviceAccount 'jenkins-admin'
            namespace 'dev'
        }
    }
    stages {
        stage('Build Config Test') {
            when { changeset "spring-petclinic-config-server/**" }
            steps {
                container('docker') {
                    sh '''
                    sh scripts/devops/build_image.sh $CONFIG_DOCKER_IMAGE local
                    '''
                }
            }
        }
        stage('Build Discovery Test') {
            when { changeset "spring-petclinic-discovery-server/**" }
            steps {
                container('docker') {
                    sh '''
                    sh scripts/devops/build_image.sh $DISCOVERY_DOCKER_IMAGE local
                    '''
                }
            }
        }
        stage('Build Cusmomers Test') {
            when { changeset "spring-petclinic-customers-service/**" }
            steps {
                container('docker') {
                    sh '''
                    sh scripts/devops/build_image.sh $CUSTOMERS_DOCKER_IMAGE local
                    '''
                }
            }
        }
        stage('Build Vets Test') {
            when { changeset "spring-petclinic-vets-service/**" }
            steps {
                container('docker') {
                    sh '''
                    sh scripts/devops/build_image.sh $VETS_DOCKER_IMAGE local
                    '''
                }
            }
        }
        stage('Build Visits Test') {
            when { changeset "spring-petclinic-visits-service/**" }
            steps {
                container('docker') {
                    sh '''
                    sh scripts/devops/build_image.sh $VISITS_DOCKER_IMAGE local
                    '''
                }
            }
        }
        stage('Build Admin Test') {
            when { changeset "spring-petclinic-admin-server/**" }
            steps {
                container('docker') {
                    sh '''
                    sh scripts/devops/build_image.sh $ADMIN_DOCKER_IMAGE local
                    '''
                }
            }
        }
        stage('Build Api-gateway Test') {
            when { changeset "spring-petclinic-api-gateway/**" }
            steps {
                container('docker') {
                    sh '''
                    sh scripts/devops/build_image.sh $APIGATEWAY_DOCKER_IMAGE local
                    '''
                }
            }
        }
        stage('Deploy Config in Testing') {                    
            agent {
                kubernetes {
                    cloud 'testing-kube'
                    yamlFile 'pipeline/jenkins/agent/pod.yaml'
                    serviceAccount 'jenkins-admin'
                    namespace 'testing'
                }
            }
            when { changeset "spring-petclinic-config-server/**" }
            steps {
                container('kubectl') {   
                    script {
                        try {
                        sh '''
                        kubectl get namespace testing
                        '''
                        } catch (err) {
                            echo "Message: ${err}"
                            sh ''' 
                            echo "Creating namespace testing ..."
                            kubectl create namespace testing
                            '''
                        }
                        sh '''
                        kubectl apply -f kubernetes/standard/config-kube.yml -n testing
                        '''
                    }
                }
            }
        }
        stage('Deploy  Discovery in Testing') {                    
            agent {
                kubernetes {
                    cloud 'testing-kube'
                    yamlFile 'pipeline/jenkins/agent/pod.yaml'
                    serviceAccount 'jenkins-admin'
                    namespace 'testing'
                }
            }
            when { changeset "spring-petclinic-discovery-server/**" }
            steps {
                container('kubectl') {
                    script{
                        try {
                        sh '''
                        kubectl get namespace testing
                        '''
                        } catch (err) {
                            echo "Message: ${err}"
                            sh ''' 
                            echo "Creating namespace testing ..."
                            kubectl create namespace testing
                            '''
                        }
                        sh '''
                        kubectl apply -f kubernetes/standard/discovery-kube.yml -n testing
                        '''
                    }
                }
            }
        }
    }
}